/**
 * This file was automatically generated by the Mule Development Kit
 */
package com.mulesoft.demo.sumtotal;

import com.sumtotalsystems.sumtotal7.sumtotalws.UserToken;
import org.mule.api.annotations.Connector;
import org.mule.api.annotations.Connect;
import org.mule.api.annotations.ValidateConnection;
import org.mule.api.annotations.ConnectionIdentifier;
import org.mule.api.annotations.Disconnect;
import org.mule.api.annotations.param.ConnectionKey;
import org.mule.api.ConnectionException;
import org.mule.api.annotations.Configurable;
import org.mule.api.annotations.Processor;

/**
 * Cloud Connector
 *
 * @author MuleSoft, Inc.
 */
@Connector(name="sumtotal", schemaVersion="1.0-SNAPSHOT")
public class SumTotalConnector {
    private static UserToken USER_TOKEN = new UserToken();
    /**
     * Configurable
     */
    @Configurable
    private String myProperty;

    /**
     * Set property
     *
     * @param myProperty My property
     */
    public void setMyProperty(String myProperty)
    {
        this.myProperty = myProperty;
    }

    /**
     * Get property
     */
    public String getMyProperty()
    {
        return this.myProperty;
    }

    /**
     * Connect
     *
     * @param username A username
     * @param password A password
     * @throws ConnectionException
     */
    @Connect
    public void connect(@ConnectionKey String username, String password) throws ConnectionException {
        USER_TOKEN = Utils.doAuth(username, password);
    }

    /**
     * Disconnect
     */
    @Disconnect
    public void disconnect() {
        Utils.endSession(USER_TOKEN);
    }

    /**
     * Are we connected
     */
    @ValidateConnection
    public boolean isConnected() {
        return USER_TOKEN.getValue() != null;
    }

    /**
     * Are we connected
     */
    @ConnectionIdentifier
    public String connectionId() {
        return USER_TOKEN.getValue();
    }

    /**
     * Custom processor
     *
     * {@sample.xml ../../../doc/SumTotal-connector.xml.sample sumtotal:my-processor}
     *
     * @param content Content to be processed
     * @return Some string
     */
    @Processor
    public String getSecurityToken(String content) {
        return "USER TOKEN IS " + USER_TOKEN.getValue();
    }
}
