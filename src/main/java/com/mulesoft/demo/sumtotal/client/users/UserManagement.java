package com.mulesoft.demo.sumtotal.client.users;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.5
 * 2013-05-20T11:39:42.822-07:00
 * Generated source version: 2.7.5
 * 
 */
@WebServiceClient(name = "UserManagement", 
                  wsdlLocation = "http://mtn-sademo-128.sumtotalsystems.com/SumTotalWS/Services/usermanagement.asmx?wsdl",
                  targetNamespace = "http://www.sumtotalsystems.com/sumtotal7/sumtotalws/UserManagement/") 
public class UserManagement extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.sumtotalsystems.com/sumtotal7/sumtotalws/UserManagement/", "UserManagement");
    public final static QName UserManagementHttpPost = new QName("http://www.sumtotalsystems.com/sumtotal7/sumtotalws/UserManagement/", "UserManagementHttpPost");
    public final static QName UserManagementSoap12 = new QName("http://www.sumtotalsystems.com/sumtotal7/sumtotalws/UserManagement/", "UserManagementSoap12");
    public final static QName UserManagementSoap = new QName("http://www.sumtotalsystems.com/sumtotal7/sumtotalws/UserManagement/", "UserManagementSoap");
    public final static QName UserManagementHttpGet = new QName("http://www.sumtotalsystems.com/sumtotal7/sumtotalws/UserManagement/", "UserManagementHttpGet");
    static {
        URL url = null;
        try {
            url = new URL("http://mtn-sademo-128.sumtotalsystems.com/SumTotalWS/Services/usermanagement.asmx?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(UserManagement.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://mtn-sademo-128.sumtotalsystems.com/SumTotalWS/Services/usermanagement.asmx?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public UserManagement(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public UserManagement(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public UserManagement() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns UserManagementHttpPost
     */
    @WebEndpoint(name = "UserManagementHttpPost")
    public UserManagementHttpPost getUserManagementHttpPost() {
        return super.getPort(UserManagementHttpPost, UserManagementHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UserManagementHttpPost
     */
    @WebEndpoint(name = "UserManagementHttpPost")
    public UserManagementHttpPost getUserManagementHttpPost(WebServiceFeature... features) {
        return super.getPort(UserManagementHttpPost, UserManagementHttpPost.class, features);
    }
    /**
     *
     * @return
     *     returns UserManagementSoap
     */
    @WebEndpoint(name = "UserManagementSoap12")
    public UserManagementSoap getUserManagementSoap12() {
        return super.getPort(UserManagementSoap12, UserManagementSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UserManagementSoap
     */
    @WebEndpoint(name = "UserManagementSoap12")
    public UserManagementSoap getUserManagementSoap12(WebServiceFeature... features) {
        return super.getPort(UserManagementSoap12, UserManagementSoap.class, features);
    }
    /**
     *
     * @return
     *     returns UserManagementSoap
     */
    @WebEndpoint(name = "UserManagementSoap")
    public UserManagementSoap getUserManagementSoap() {
        return super.getPort(UserManagementSoap, UserManagementSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UserManagementSoap
     */
    @WebEndpoint(name = "UserManagementSoap")
    public UserManagementSoap getUserManagementSoap(WebServiceFeature... features) {
        return super.getPort(UserManagementSoap, UserManagementSoap.class, features);
    }
    /**
     *
     * @return
     *     returns UserManagementHttpGet
     */
    @WebEndpoint(name = "UserManagementHttpGet")
    public UserManagementHttpGet getUserManagementHttpGet() {
        return super.getPort(UserManagementHttpGet, UserManagementHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns UserManagementHttpGet
     */
    @WebEndpoint(name = "UserManagementHttpGet")
    public UserManagementHttpGet getUserManagementHttpGet(WebServiceFeature... features) {
        return super.getPort(UserManagementHttpGet, UserManagementHttpGet.class, features);
    }

}
